# Test configuration : 
#    /usr/share/logstash/bin/logstash -f logstashpipeline.conf --config.test_and_exit
#
input {
  # This queue is used for dirac components
  # <% @mb_brokers.each do |mbhost| %>
  # stomp {
  #    type => "stomp"
  #    destination => "/queue/lhcb.dirac.logging"
  #    host => <%= mbhost %>
  #    port => 61713
  #    user => "dirac"
  #    password => "%TEIGI__mqPassword__%"
  #    codec => "json"
  # }
  # <% end %>
  input {
    tcp {
      port => 3003
      codec => json_lines
    }
  }
}

filter{
  if [type] == "tcp" {
    # If there is an exception, print it multiline
    # This is the way to test if a variable is defined
    if "" in [exc_info]{
      mutate {
        gsub => [
        "exc_info", "\\n", "\n"
        ]
      }
    } else {
      # otherwise, add the field as empty string so that it does not display
      mutate {
        add_field => {"exc_info" => ""}
      }
    }
    # If levelname is not defined, we can infer that several other infos
    # are missing, like asctime. So define them empty.
    if !("" in [levelname]){
      mutate {
        add_field => {"levelname" => ""
                    "asctime" => ""}
      }
    }
    date {
      match => [ "asctime", "yyyy-MM-dd HH:mm:ss" ]
      timezone => "UTC"
    }

    # we want to create the index based on the component name
    # but the component name has a "/" in it, so replace it
    # with a "-", and set it lowercase
    # We do it in two separate mutate filter to make sure
    # of the order
    mutate {
      copy => { "componentname" => "componentindex" }
    }
    mutate {
      gsub => [
        "componentindex", "/", "-"
      ]
      lowercase => [ "componentindex" ]
    }
  }
}


output {
  if [type] == "tcp"  {
    elasticsearch {
      index    => "france-grille-dirac-logs-%{componentindex}-%{+YYYY.MM.dd}"
      hosts    => ["localhost:9200"]
      #user     => "lhcb-dirac-logs"
      template_name => "logstashGrilleTemplate.tmpl"
      manage_template => "false"
      #password => "%TEIGI__<%= scope['::environment'] %>_es_dirac_logs_Password__%"
    }
  }
}